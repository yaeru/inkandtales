{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/apollo-cache/lib/bundle.esm.js","webpack:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/@wry/context/lib/context.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@wry/equality/lib/equality.esm.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","queryFromPojo","obj","op","kind","operation","name","selectionSet","selectionSetFromObj","out","definitions","fragmentFromPojo","typename","frag","typeCondition","Array","isArray","selections","Object","keys","forEach","nestedSelSet","field","push","Cache","justTypenameQuery","variableDefinitions","directives","alias","ApolloCache","prototype","transformDocument","document","transformForLink","readQuery","options","optimistic","read","query","variables","readFragment","fragment","fragmentName","rootId","id","writeQuery","write","dataId","result","data","writeFragment","writeData","_a","typenameResult","e","__typename","dataToWrite","assign","haveWarned","shouldWarn","answer","HeuristicFragmentMatcher","ensureReady","canBypassInit","match","idValue","context","store","get","isRootQuery","hasOwn","IntrospectionFragmentMatcher","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","bind","implementingTypes","indexOf","introspectionResultData","typeMap","__schema","types","type","possibleTypes","map","implementingType","hasOwnProperty","DepTrackingCache","_this","create","depend","disposable","makeCacheKey","toObject","set","oldValue","dirty","delete","call","clear","replace","newData","defaultNormalizedCacheFactory","seed","StoreReader","_b","_c","cacheKeyRoot","_d","freezeResults","_e","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","rootValue","contextValue","variableValues","fragmentMatcher","lookup","JSON","stringify","execContext","array","readQueryFromStore","diffQueryAgainstStore","returnPartialData","previousResult","fragmentMatcherFunction","config","queryDefinition","dataIdFromObject","cacheRedirects","execResult","generated","hasMissingFields","missing","length","tolerable","complete","defaultFragmentMatcher","mainDefinition","fragments","fragmentMap","finalResult","objectsToMerge","object","handleMissing","selection","fieldResult","executeField","fragmentExecResult","fieldName","resultKey","readStoreResult","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","_i","pop","childResult","item","storeKeyName","fieldValue","resolver","getCacheKey","storeObj","json","ObjectCache","_super","WriteError","Error","enhanceErrorWithDocument","enhancedError","message","stack","StoreWriter","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","resultFieldKey","writeFieldToStore","isDefered","isClient","some","directive","matches","fakeContext","storeValue","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","index","itemDataId","generatedKey","realKey","cache","real","madeChanges","realValue","newRealValue","defaultConfig","defaultDataIdFromObject","addTypename","resultCaching","_id","hasOwn$1","OptimisticCacheLayer","optimisticId","parent","transaction","InMemoryCache","watches","Set","typenameDocumentCache","Map","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","c","restore","extract","broadcastWatches","diff","watch","add","evict","reset","removeOptimistic","idToRemove","toReapply","removedCount","layer","layer_1","performTransaction","recordOptimisticTransaction","callback","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","i","source","getOwnPropertyDescriptors","defineProperties","currentContext","MISSING_VALUE","idCounter","makeSlotClass","Slot","Date","now","Math","random","toString","slice","join","hasValue","context_1","slots","getValue","withValue","thisArg","__proto__","saved","noContext","globalKey","host","_taggedTemplateLiteral","strings","raw","freeze","previousComparisons","equal","a","b","check","aTag","bTag","previouslyCompared","aKeys","bKeys","keyCount","k","size","aIterator","entries","isMap","next","aKey","aValue","has","bSet"],"mappings":"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","file":"js/chunk-vendors~253ae210.8c2d2e29.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, maybeDeepFreeze, isIdValue, getStoreKeyName, toIdValue, isJsonValue, canUseWeakMap, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap, KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        if (!__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady, 1) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        process.env.NODE_ENV === \"production\" ? invariant(__typename, 2) : invariant(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (__typename &&\n            implementingTypes &&\n            implementingTypes.indexOf(__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        var _this = this;\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n        this.depend = wrap(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            },\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.cacheKeyRoot, cacheKeyRoot = _c === void 0 ? new KeyTrie(canUseWeakMap) : _c, _d = _b.freezeResults, freezeResults = _d === void 0 ? false : _d;\n        var _e = this, executeStoreQuery = _e.executeStoreQuery, executeSelectionSet = _e.executeSelectionSet, executeSubSelectedArray = _e.executeSubSelectedArray;\n        this.freezeResults = freezeResults;\n        this.executeStoreQuery = wrap(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSelectionSet = wrap(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            return executeSubSelectedArray.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n                }\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        return this.diffQueryAgainstStore(__assign(__assign({}, options), { returnPartialData: false })).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: config && config.dataIdFromObject,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n                var match = !typeCondition ||\n                    execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign(__assign({}, fragmentExecResult), { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign(__assign({}, info), { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(finalResult.result);\n        }\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n                field: field,\n                array: readStoreResult.result,\n                execContext: execContext,\n            }));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n                maybeDeepFreeze(readStoreResult);\n            }\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, execContext = _a.execContext;\n        var missing;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        array = array.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    execContext: execContext,\n                }));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(array);\n        }\n        return { result: array, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue), 11) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            var id = context.dataIdFromObject(storeObj);\n                            return id && toIdValue({\n                                id: id,\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment, 3) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var id = dataId || 'self';\n                    var idValue = toIdValue({ id: id, typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var _b;\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId), 4) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged, 5) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename, 6) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign(__assign({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign(__assign({}, generated), real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    freezeResults: false,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new KeyTrie(canUseWeakMap);\n        _this.silenceBroadcast = false;\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = !!_this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter();\n        _this.storeReader = new StoreReader({\n            cacheKeyRoot: _this.cacheKeyRoot,\n            freezeResults: config.freezeResults,\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            previousResult: options.previousResult,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (write) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(7) : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { HeuristicFragmentMatcher, InMemoryCache, IntrospectionFragmentMatcher, ObjectCache, StoreReader, StoreWriter, WriteError, assertIdValue, defaultDataIdFromObject, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory, enhanceErrorWithDocument };\n//# sourceMappingURL=bundle.esm.js.map\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// This currentContext variable will only be used if the makeSlotClass\r\n// function is called, which happens only if this is the first copy of the\r\n// @wry/context package to be imported.\r\nvar currentContext = null;\r\n// This unique internal object is used to denote the absence of a value\r\n// for a given Slot, and is never exposed to outside code.\r\nvar MISSING_VALUE = {};\r\nvar idCounter = 1;\r\n// Although we can't do anything about the cost of duplicated code from\r\n// accidentally bundling multiple copies of the @wry/context package, we can\r\n// avoid creating the Slot class more than once using makeSlotClass.\r\nvar makeSlotClass = function () { return /** @class */ (function () {\r\n    function Slot() {\r\n        // If you have a Slot object, you can find out its slot.id, but you cannot\r\n        // guess the slot.id of a Slot you don't have access to, thanks to the\r\n        // randomized suffix.\r\n        this.id = [\r\n            \"slot\",\r\n            idCounter++,\r\n            Date.now(),\r\n            Math.random().toString(36).slice(2),\r\n        ].join(\":\");\r\n    }\r\n    Slot.prototype.hasValue = function () {\r\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\r\n            // We use the Slot object iself as a key to its value, which means the\r\n            // value cannot be obtained without a reference to the Slot object.\r\n            if (this.id in context_1.slots) {\r\n                var value = context_1.slots[this.id];\r\n                if (value === MISSING_VALUE)\r\n                    break;\r\n                if (context_1 !== currentContext) {\r\n                    // Cache the value in currentContext.slots so the next lookup will\r\n                    // be faster. This caching is safe because the tree of contexts and\r\n                    // the values of the slots are logically immutable.\r\n                    currentContext.slots[this.id] = value;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (currentContext) {\r\n            // If a value was not found for this Slot, it's never going to be found\r\n            // no matter how many times we look it up, so we might as well cache\r\n            // the absence of the value, too.\r\n            currentContext.slots[this.id] = MISSING_VALUE;\r\n        }\r\n        return false;\r\n    };\r\n    Slot.prototype.getValue = function () {\r\n        if (this.hasValue()) {\r\n            return currentContext.slots[this.id];\r\n        }\r\n    };\r\n    Slot.prototype.withValue = function (value, callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        var _a;\r\n        var slots = (_a = {\r\n                __proto__: null\r\n            },\r\n            _a[this.id] = value,\r\n            _a);\r\n        var parent = currentContext;\r\n        currentContext = { parent: parent, slots: slots };\r\n        try {\r\n            // Function.prototype.apply allows the arguments array argument to be\r\n            // omitted or undefined, so args! is fine here.\r\n            return callback.apply(thisArg, args);\r\n        }\r\n        finally {\r\n            currentContext = parent;\r\n        }\r\n    };\r\n    // Capture the current context and wrap a callback function so that it\r\n    // reestablishes the captured context when called.\r\n    Slot.bind = function (callback) {\r\n        var context = currentContext;\r\n        return function () {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = context;\r\n                return callback.apply(this, arguments);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        };\r\n    };\r\n    // Immediately run a callback function without any captured context.\r\n    Slot.noContext = function (callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        if (currentContext) {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = null;\r\n                // Function.prototype.apply allows the arguments array argument to be\r\n                // omitted or undefined, so args! is fine here.\r\n                return callback.apply(thisArg, args);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        }\r\n        else {\r\n            return callback.apply(thisArg, args);\r\n        }\r\n    };\r\n    return Slot;\r\n}()); };\r\n// We store a single global implementation of the Slot class as a permanent\r\n// non-enumerable symbol property of the Array constructor. This obfuscation\r\n// does nothing to prevent access to the Slot class, but at least it ensures\r\n// the implementation (i.e. currentContext) cannot be tampered with, and all\r\n// copies of the @wry/context package (hopefully just one) will share the\r\n// same Slot implementation. Since the first copy of the @wry/context package\r\n// to be imported wins, this technique imposes a very high cost for any\r\n// future breaking changes to the Slot class.\r\nvar globalKey = \"@wry/context:Slot\";\r\nvar host = Array;\r\nvar Slot = host[globalKey] || function () {\r\n    var Slot = makeSlotClass();\r\n    try {\r\n        Object.defineProperty(host, globalKey, {\r\n            value: host[globalKey] = Slot,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false,\r\n        });\r\n    }\r\n    finally {\r\n        return Slot;\r\n    }\r\n}();\n\nvar bind = Slot.bind, noContext = Slot.noContext;\r\nfunction setTimeoutWithContext(callback, delay) {\r\n    return setTimeout(bind(callback), delay);\r\n}\r\n// Turn any generator function into an async function (using yield instead\r\n// of await), with context automatically preserved across yields.\r\nfunction asyncFromGen(genFn) {\r\n    return function () {\r\n        var gen = genFn.apply(this, arguments);\r\n        var boundNext = bind(gen.next);\r\n        var boundThrow = bind(gen.throw);\r\n        return new Promise(function (resolve, reject) {\r\n            function invoke(method, argument) {\r\n                try {\r\n                    var result = method.call(gen, argument);\r\n                }\r\n                catch (error) {\r\n                    return reject(error);\r\n                }\r\n                var next = result.done ? resolve : invokeNext;\r\n                if (isPromiseLike(result.value)) {\r\n                    result.value.then(next, result.done ? reject : invokeThrow);\r\n                }\r\n                else {\r\n                    next(result.value);\r\n                }\r\n            }\r\n            var invokeNext = function (value) { return invoke(boundNext, value); };\r\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\r\n            invokeNext();\r\n        });\r\n    };\r\n}\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\n// If you use the fibers npm package to implement coroutines in Node.js,\r\n// you should call this function at least once to ensure context management\r\n// remains coherent across any yields.\r\nvar wrappedFibers = [];\r\nfunction wrapYieldingFiberMethods(Fiber) {\r\n    // There can be only one implementation of Fiber per process, so this array\r\n    // should never grow longer than one element.\r\n    if (wrappedFibers.indexOf(Fiber) < 0) {\r\n        var wrap = function (obj, method) {\r\n            var fn = obj[method];\r\n            obj[method] = function () {\r\n                return noContext(fn, arguments, this);\r\n            };\r\n        };\r\n        // These methods can yield, according to\r\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\r\n        wrap(Fiber, \"yield\");\r\n        wrap(Fiber.prototype, \"run\");\r\n        wrap(Fiber.prototype, \"throwInto\");\r\n        wrappedFibers.push(Fiber);\r\n    }\r\n    return Fiber;\r\n}\n\nexport { Slot, asyncFromGen, bind, noContext, setTimeoutWithContext as setTimeout, wrapYieldingFiberMethods };\n//# sourceMappingURL=context.esm.js.map\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var _a = Object.prototype, toString = _a.toString, hasOwnProperty = _a.hasOwnProperty;\r\nvar previousComparisons = new Map();\r\n/**\r\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\r\n */\r\nfunction equal(a, b) {\r\n    try {\r\n        return check(a, b);\r\n    }\r\n    finally {\r\n        previousComparisons.clear();\r\n    }\r\n}\r\nfunction check(a, b) {\r\n    // If the two values are strictly equal, our job is easy.\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    // Object.prototype.toString returns a representation of the runtime type of\r\n    // the given value that is considerably more precise than typeof.\r\n    var aTag = toString.call(a);\r\n    var bTag = toString.call(b);\r\n    // If the runtime types of a and b are different, they could maybe be equal\r\n    // under some interpretation of equality, but for simplicity and performance\r\n    // we just return false instead.\r\n    if (aTag !== bTag) {\r\n        return false;\r\n    }\r\n    switch (aTag) {\r\n        case '[object Array]':\r\n            // Arrays are a lot like other objects, but we can cheaply compare their\r\n            // lengths as a short-cut before comparing their elements.\r\n            if (a.length !== b.length)\r\n                return false;\r\n        // Fall through to object case...\r\n        case '[object Object]': {\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aKeys = Object.keys(a);\r\n            var bKeys = Object.keys(b);\r\n            // If `a` and `b` have a different number of enumerable keys, they\r\n            // must be different.\r\n            var keyCount = aKeys.length;\r\n            if (keyCount !== bKeys.length)\r\n                return false;\r\n            // Now make sure they have the same keys.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                if (!hasOwnProperty.call(b, aKeys[k])) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Finally, check deep equality of all child properties.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                var key = aKeys[k];\r\n                if (!check(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Error]':\r\n            return a.name === b.name && a.message === b.message;\r\n        case '[object Number]':\r\n            // Handle NaN, which is !== itself.\r\n            if (a !== a)\r\n                return b !== b;\r\n        // Fall through to shared +a === +b case...\r\n        case '[object Boolean]':\r\n        case '[object Date]':\r\n            return +a === +b;\r\n        case '[object RegExp]':\r\n        case '[object String]':\r\n            return a == \"\" + b;\r\n        case '[object Map]':\r\n        case '[object Set]': {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aIterator = a.entries();\r\n            var isMap = aTag === '[object Map]';\r\n            while (true) {\r\n                var info = aIterator.next();\r\n                if (info.done)\r\n                    break;\r\n                // If a instanceof Set, aValue === aKey.\r\n                var _a = info.value, aKey = _a[0], aValue = _a[1];\r\n                // So this works the same way for both Set and Map.\r\n                if (!b.has(aKey)) {\r\n                    return false;\r\n                }\r\n                // However, we care about deep equality of values only when dealing\r\n                // with Map structures.\r\n                if (isMap && !check(aValue, b.get(aKey))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    // Otherwise the values are not equal.\r\n    return false;\r\n}\r\nfunction previouslyCompared(a, b) {\r\n    // Though cyclic references can make an object graph appear infinite from the\r\n    // perspective of a depth-first traversal, the graph still contains a finite\r\n    // number of distinct object references. We use the previousComparisons cache\r\n    // to avoid comparing the same pair of object references more than once, which\r\n    // guarantees termination (even if we end up comparing every object in one\r\n    // graph to every object in the other graph, which is extremely unlikely),\r\n    // while still allowing weird isomorphic structures (like rings with different\r\n    // lengths) a chance to pass the equality test.\r\n    var bSet = previousComparisons.get(a);\r\n    if (bSet) {\r\n        // Return true here because we can be sure false will be returned somewhere\r\n        // else if the objects are not equivalent.\r\n        if (bSet.has(b))\r\n            return true;\r\n    }\r\n    else {\r\n        previousComparisons.set(a, bSet = new Set);\r\n    }\r\n    bSet.add(b);\r\n    return false;\r\n}\n\nexport default equal;\nexport { equal };\n//# sourceMappingURL=equality.esm.js.map\n"],"sourceRoot":""}